<?php

/*
 * PUQcloud - Free Cloud Billing System
 * Main billing system core logic
 *
 * Copyright (C) 2025 PUQ sp. z o.o.
 * Licensed under GNU GPLv3
 * https://www.gnu.org/licenses/gpl-3.0.html
 *
 * Author: Dmytro Kravchenko <dmytro.kravchenko@ihostmi.com>
 * Website: https://puqcloud.com
 * E-mail: support@puqcloud.com
 *
 * Do not remove this header.
 */

namespace Database\Factories;

use App\Models\ProductOption;
use App\Models\ProductOptionGroup;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Str;

class ProductOptionFactory extends Factory
{
    protected $model = ProductOption::class;

    public function definition(): array
    {
        return [
            'uuid' => Str::uuid(),
            'key' => 'option_'.Str::random(8),
            'product_option_group_uuid' => ProductOptionGroup::factory(),
            'value' => $this->faker->word,
            'hidden' => $this->faker->boolean(5), // 5% chance to be hidden
            'order' => $this->faker->numberBetween(1, 100),
            'notes' => 'Generated by ProductOptionFactory',
        ];
    }

    public function forGroup(ProductOptionGroup $group): self
    {
        return $this->state(function (array $attributes) use ($group) {
            $optionData = $this->generateOptionForGroup($group->key);

            return [
                'product_option_group_uuid' => $group->uuid,
                'key' => $optionData['key'],
                'value' => $optionData['value'],
            ];
        });
    }

    public function withTranslations(): self
    {
        return $this->afterCreating(function (ProductOption $option) {
            $optionGroup = $option->productOptionGroup;
            $groupKey = $optionGroup ? $optionGroup->key : 'general';

            $optionData = $this->generateOptionData($groupKey, $option->key, $option->value);

            $option->name = $optionData['name'];
            $option->short_description = $optionData['short_description'];
            $option->description = $optionData['description'];
            $option->save();
        });
    }

    private function generateOptionForGroup(string $groupKey): array
    {
        $optionsByGroup = [
            'RAM' => [
                ['key' => 'ram_1gb', 'value' => '1'],
                ['key' => 'ram_2gb', 'value' => '2'],
                ['key' => 'ram_4gb', 'value' => '4'],
                ['key' => 'ram_8gb', 'value' => '8'],
                ['key' => 'ram_16gb', 'value' => '16'],
                ['key' => 'ram_32gb', 'value' => '32'],
            ],
            'CPU' => [
                ['key' => 'cpu_1core', 'value' => '1'],
                ['key' => 'cpu_2cores', 'value' => '2'],
                ['key' => 'cpu_4cores', 'value' => '4'],
                ['key' => 'cpu_8cores', 'value' => '8'],
                ['key' => 'cpu_16cores', 'value' => '16'],
            ],
            'Disk' => [
                ['key' => 'disk_20gb', 'value' => '20'],
                ['key' => 'disk_50gb', 'value' => '50'],
                ['key' => 'disk_100gb', 'value' => '100'],
                ['key' => 'disk_200gb', 'value' => '200'],
                ['key' => 'disk_500gb', 'value' => '500'],
                ['key' => 'disk_1tb', 'value' => '1000'],
            ],
            'OS' => [
                ['key' => 'ubuntu_22_04', 'value' => 'ubuntu-22.04'],
                ['key' => 'centos_8', 'value' => 'centos-8'],
                ['key' => 'debian_11', 'value' => 'debian-11'],
                ['key' => 'windows_server_2022', 'value' => 'windows-server-2022'],
                ['key' => 'rocky_linux_9', 'value' => 'rocky-linux-9'],
            ],
            'Location' => [
                ['key' => 'us_east', 'value' => 'us-east-1'],
                ['key' => 'us_west', 'value' => 'us-west-1'],
                ['key' => 'eu_central', 'value' => 'eu-central-1'],
                ['key' => 'asia_pacific', 'value' => 'ap-southeast-1'],
                ['key' => 'canada_central', 'value' => 'ca-central-1'],
            ],
            'GPU' => [
                ['key' => 'nvidia_gtx_1060', 'value' => 'gtx-1060'],
                ['key' => 'nvidia_rtx_3080', 'value' => 'rtx-3080'],
                ['key' => 'nvidia_tesla_v100', 'value' => 'tesla-v100'],
                ['key' => 'amd_radeon_pro', 'value' => 'radeon-pro'],
            ],
            'Firewall' => [
                ['key' => 'basic_firewall', 'value' => 'basic'],
                ['key' => 'advanced_firewall', 'value' => 'advanced'],
                ['key' => 'enterprise_firewall', 'value' => 'enterprise'],
            ],
            'Backup' => [
                ['key' => 'daily_backup', 'value' => 'daily'],
                ['key' => 'weekly_backup', 'value' => 'weekly'],
                ['key' => 'realtime_backup', 'value' => 'realtime'],
                ['key' => 'monthly_backup', 'value' => 'monthly'],
            ],
            'Bandwidth' => [
                ['key' => 'bandwidth_100mbps', 'value' => '100'],
                ['key' => 'bandwidth_1gbps', 'value' => '1000'],
                ['key' => 'bandwidth_10gbps', 'value' => '10000'],
                ['key' => 'bandwidth_unlimited', 'value' => 'unlimited'],
            ],
            'Support' => [
                ['key' => 'basic_support', 'value' => 'basic'],
                ['key' => 'priority_support', 'value' => 'priority'],
                ['key' => 'enterprise_support', 'value' => 'enterprise'],
                ['key' => 'premium_support', 'value' => 'premium'],
            ],
        ];

        $options = $optionsByGroup[$groupKey] ?? [['key' => 'default_option', 'value' => 'default']];

        return $this->faker->randomElement($options);
    }

    private function generateOptionData(string $groupKey, string $optionKey, string $value): array
    {
        $optionTemplates = [
            'RAM' => [
                'ram_1gb' => ['name' => '1 GB RAM', 'short_description' => '1 GB Memory', 'description' => '1 GB of RAM memory allocation for basic applications and light workloads.'],
                'ram_2gb' => ['name' => '2 GB RAM', 'short_description' => '2 GB Memory', 'description' => '2 GB of RAM memory allocation for small to medium applications.'],
                'ram_4gb' => ['name' => '4 GB RAM', 'short_description' => '4 GB Memory', 'description' => '4 GB of RAM memory allocation for standard applications and development work.'],
                'ram_8gb' => ['name' => '8 GB RAM', 'short_description' => '8 GB Memory', 'description' => '8 GB of RAM memory allocation for demanding applications and multitasking.'],
                'ram_16gb' => ['name' => '16 GB RAM', 'short_description' => '16 GB Memory', 'description' => '16 GB of RAM memory allocation for high-performance applications and heavy workloads.'],
                'ram_32gb' => ['name' => '32 GB RAM', 'short_description' => '32 GB Memory', 'description' => '32 GB of RAM memory allocation for enterprise applications and intensive computing tasks.'],
            ],
            'CPU' => [
                'cpu_1core' => ['name' => '1 CPU Core', 'short_description' => 'Single core', 'description' => 'Single CPU core for light applications and basic computing tasks.'],
                'cpu_2cores' => ['name' => '2 CPU Cores', 'short_description' => 'Dual core', 'description' => '2 CPU cores for improved performance and parallel processing capabilities.'],
                'cpu_4cores' => ['name' => '4 CPU Cores', 'short_description' => 'Quad core', 'description' => '4 CPU cores for demanding applications and multi-threaded workloads.'],
                'cpu_8cores' => ['name' => '8 CPU Cores', 'short_description' => 'Octa core', 'description' => '8 CPU cores for high-performance computing and intensive applications.'],
                'cpu_16cores' => ['name' => '16 CPU Cores', 'short_description' => 'Sixteen cores', 'description' => '16 CPU cores for enterprise-grade performance and maximum processing power.'],
            ],
            'Disk' => [
                'disk_20gb' => ['name' => '20 GB Storage', 'short_description' => '20 GB SSD', 'description' => '20 GB of high-speed SSD storage for basic file storage and small applications.'],
                'disk_50gb' => ['name' => '50 GB Storage', 'short_description' => '50 GB SSD', 'description' => '50 GB of high-speed SSD storage for moderate data storage needs.'],
                'disk_100gb' => ['name' => '100 GB Storage', 'short_description' => '100 GB SSD', 'description' => '100 GB of high-speed SSD storage for standard applications and data.'],
                'disk_200gb' => ['name' => '200 GB Storage', 'short_description' => '200 GB SSD', 'description' => '200 GB of high-speed SSD storage for larger applications and databases.'],
                'disk_500gb' => ['name' => '500 GB Storage', 'short_description' => '500 GB SSD', 'description' => '500 GB of high-speed SSD storage for extensive data storage requirements.'],
                'disk_1tb' => ['name' => '1 TB Storage', 'short_description' => '1 TB SSD', 'description' => '1 TB of high-speed SSD storage for enterprise applications and large datasets.'],
            ],
            'OS' => [
                'ubuntu_22_04' => ['name' => 'Ubuntu 22.04 LTS', 'short_description' => 'Ubuntu Linux', 'description' => 'Ubuntu 22.04 LTS - Popular, user-friendly Linux distribution with long-term support.'],
                'centos_8' => ['name' => 'CentOS 8', 'short_description' => 'CentOS Linux', 'description' => 'CentOS 8 - Enterprise-class Linux distribution based on Red Hat Enterprise Linux.'],
                'debian_11' => ['name' => 'Debian 11', 'short_description' => 'Debian Linux', 'description' => 'Debian 11 - Stable and reliable Linux distribution known for its robustness.'],
                'windows_server_2022' => ['name' => 'Windows Server 2022', 'short_description' => 'Windows Server', 'description' => 'Windows Server 2022 - Latest Microsoft server operating system with advanced features.'],
                'rocky_linux_9' => ['name' => 'Rocky Linux 9', 'short_description' => 'Rocky Linux', 'description' => 'Rocky Linux 9 - Enterprise Linux distribution compatible with Red Hat Enterprise Linux.'],
            ],
            'Location' => [
                'us_east' => ['name' => 'US East (Virginia)', 'short_description' => 'US East Coast', 'description' => 'Data center located on the US East Coast for optimal performance in North America.'],
                'us_west' => ['name' => 'US West (California)', 'short_description' => 'US West Coast', 'description' => 'Data center located on the US West Coast for optimal performance in the Pacific region.'],
                'eu_central' => ['name' => 'EU Central (Frankfurt)', 'short_description' => 'Central Europe', 'description' => 'Data center located in Central Europe for optimal performance in European markets.'],
                'asia_pacific' => ['name' => 'Asia Pacific (Singapore)', 'short_description' => 'Asia Pacific', 'description' => 'Data center located in Asia Pacific region for optimal performance in Asian markets.'],
                'canada_central' => ['name' => 'Canada Central (Toronto)', 'short_description' => 'Central Canada', 'description' => 'Data center located in Central Canada for optimal performance in Canadian markets.'],
            ],
        ];

        $groupTemplates = $optionTemplates[$groupKey] ?? [];
        $template = $groupTemplates[$optionKey] ?? [
            'name' => ucwords(str_replace('_', ' ', $optionKey)),
            'short_description' => 'Service option',
            'description' => 'Additional service configuration option with value: '.$value,
        ];

        return $template;
    }
}
